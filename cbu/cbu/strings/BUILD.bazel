# cbu - chys's basic utilities
# Copyright (c) 2023-2024, chys <admin@CHYS.INFO>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of chys <admin@CHYS.INFO> nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY chys <admin@CHYS.INFO> ''AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL chys <admin@CHYS.INFO> BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


cc_library(
  name = 'header_only',
  srcs = [],
  hdrs = [
    'bytes_view.h',
    'fixed_length_compare.h',
    'fixed_string.h',
    'hex.h',
    'immutable_string.h',
    'length_prefixed_string_literal.h',
    'short_string.h',
    'str_split.h',
    'str_to_number.h',
    'str_to_number_internal.h',
  ],
  deps = [
    '//cbu/common:header_only',
  ],
  linkstatic=True,
  visibility = ["//visibility:public"],
)

cc_library(
  name = 'str_cat',
  srcs = [
    'str_cat.cc',
  ],
  hdrs = [
    'str_cat.h',
  ],
  deps = [
    '//cbu/common:stdhack',
    '//cbu/tweak:tweak',
  ],
  # cbu is a collection of really TINY utilities so you may always want to
  # use static linking
  linkstatic=True,
  visibility = ["//visibility:public"],
)

cc_library(
  name = 'common',
  srcs = [
    'encoding.cc',
    'escape.cc',
    'strutil.cc',
  ],
  hdrs = [
    'encoding.h',
    'escape.h',
    'strutil.h',
    'zstring_view.h',
  ],
  deps = [
    ':header_only',
    ':faststr',
    '//cbu/math:common',
    '//cbu/math:strict_overflow',
    '//cbu/tweak:tweak',
  ],
  linkstatic=True,
  visibility = ["//visibility:public"],
)

cc_library(
  name = 'faststr',
  srcs = ['faststr.cc'],
  hdrs = ['faststr.h'],
  deps = [
    '//cbu/common:header_only',
    '//cbu/common:stdhack',
    '//cbu/compat:compat',
    '//cbu/math:common',
    '//cbu/math:strict_overflow',
  ],
  linkstatic=True,
  visibility = ["//visibility:public"],
)

cc_library(
  name = 'low_level_buffer_filler',
  srcs = [],
  hdrs = ['low_level_buffer_filler.h'],
  deps = [
    '//cbu/math:fastdiv',
    ':common',
  ],
  linkstatic=True,
  visibility = ["//visibility:public"],
)

cc_library(
  name = 'misc',
  srcs = [
    'misc.cc',
  ],
  hdrs = [
    'misc.h',
  ],
  deps = [
  ],
  # cbu is a collection of really TINY utilities so you may always want to
  # use static linking
  linkstatic=True,
  visibility = ["//visibility:public"],
)

cc_test(
  name = 'strings-tests',
  srcs = glob(['*_test.cc', '*_test.h']),
  deps = [
    ':misc',
    ':header_only',
    ':str_cat',
    ':common',
    ':low_level_buffer_filler',
    '@com_google_googletest//:gtest_main',
    '//cbu/debug:gtest_formatters',
  ],
)
